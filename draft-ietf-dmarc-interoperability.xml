<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
which is available here: http://xml.resource.org. -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
There has to be one entity for each item to be referenced. 
An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2045 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2045.xml">
<!ENTITY RFC3463 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3463.xml">
<!ENTITY RFC5228 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5228.xml">
<!ENTITY RFC5321 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5321.xml">
<!ENTITY RFC5322 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5322.xml">
<!ENTITY RFC5598 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5598.xml">
<!ENTITY RFC5703 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5703.xml">
<!ENTITY RFC6376 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6376.xml">
<!ENTITY RFC6377 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6377.xml">
<!ENTITY RFC6541 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6541.xml">
<!ENTITY RFC6648 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6648.xml">
<!ENTITY RFC7208 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7208.xml">
<!ENTITY RFC7372 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7372.xml">
<!ENTITY RFC7489 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7489.xml">
<!ENTITY I-D.kucherawy-dkim-transform SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.kucherawy-dkim-transform.xml">
<!ENTITY I-D.levine-dkim-conditional SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-levine-dkim-conditional-00.xml">
<!ENTITY I-D.otis-tpa-label SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-otis-tpa-label-00.xml">
<!ENTITY I-D.kucherawy-dkim-list-canon SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-kucherawy-dkim-list-canon-00.xml">
<!ENTITY I-D.kucherawy-dkim-delegate SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-kucherawy-dkim-delegate-01.xml">
<!ENTITY I-D.kucherawy-original-authres SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-kucherawy-original-authres-00.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
(Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
(using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-ietf-dmarc-interoperability-04" ipr="trust200902">
	<!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->
	<!-- ***** FRONT MATTER ***** -->
	<front>
		<!-- The abbreviated title is used in the page header - it is only necessary if the 
    full title is longer than 39 characters -->
		<title abbrev="DMARC Indirect Email Interop Issues">Interoperability Issues Between DMARC and Indirect Email Flows</title>
		<!-- add 'role="editor"' below for the editors if appropriate -->
		<!-- Another author who claims to be an editor -->
		<author fullname="Franck Martin" initials="F.M." role="editor" surname="Martin">
			<organization>LinkedIn</organization>
			<address>
				<postal>
					<street/>
					<!-- Reorder these if your country does things differently -->
					<city>Mountain View</city>
					<region>CA</region>
					<code/>
					<country>USA</country>
				</postal>
				<phone/>
				<email>fmartin@linkedin.com</email>
				<!-- uri and facsimile elements may also be added -->
			</address>
		</author>
		<author fullname="Eliot Lear" initials="E.L." role="editor" surname="Lear">
			<organization>Cisco Systems GmbH</organization>
			<address>
				<postal>
					<street>Richtistrasse 7</street>
					<city>Wallisellen</city>
					<code>CH-8304</code>
					<region>ZH</region>
					<country>Switzerland</country>
				</postal>
				<phone>+41 44 878 9200</phone>
				<email>lear@cisco.com</email>
				<!-- uri and facsimile elements may also be added -->
			</address>
		</author>
		<author fullname="Tim Draegen" initials="T.D." role="editor" surname="Draegen">
			<organization>Eudaemonic Development LLC</organization>
			<address>
				<postal>
					<street>PO Box 19443</street>
					<city>Asheville</city>
					<code>28815</code>
					<region>NC</region>
					<country>USA</country>
				</postal>
				<phone/>
				<email>tim@eudev.net</email>
				<!-- uri and facsimile elements may also be added -->
			</address>
		</author>
		<author fullname="Elizabeth Zwicky" initials="E.D.Z." role="editor" surname="Zwicky">
			<organization>Yahoo</organization>
			<address>
				<postal>
					<street/>
					<!-- Reorder these if your country does things differently -->
					<city>Sunnyvale</city>
					<region>CA</region>
					<code/>
					<country>USA</country>
				</postal>
				<phone/>
				<email>zwicky@yahoo-inc.com</email>
				<!-- uri and facsimile elements may also be added -->
			</address>
		</author>
		<date month="June" year="2015"/>
		<!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->
		<!-- Meta-data Declarations -->
		<area>apparea</area>
		<workgroup>DMARC Working Group</workgroup>
		<!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
  which is used by the RFC Editor as a nod to the history of the IETF. -->
		<keyword>SMTP</keyword>
		<keyword>DMARC</keyword>
		<keyword>DKIM</keyword>
		<keyword>SPF</keyword>
		<!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->
		<abstract>
			<t>DMARC introduces a mechanism for expressing domain-level policies and preferences for email message validation, disposition, and reporting.  The DMARC mechanism can encounter interoperability issues when messages do not flow directly from the author's administrative domain to the final recipients. Collectively these email flows are referred to as indirect email flows.  This document describes interoperability issues between DMARC and indirect email flows. Possible methods for addressing interoperability issues are presented.</t> 
		</abstract> 
	</front>
	<middle>
		<section title="Introduction">
			<t><xref target="RFC7489">DMARC</xref> introduces a mechanism for expressing domain-level policies and preferences for message validation, disposition, and reporting.  The DMARC mechanism can encounter several different types of interoperability issues due to third-party message sourcing, message transformation or rerouting.</t>
      <t>DMARC is, as this writing, an Informational RFC, however it has a significant deployment within the email community.</t>
			<t>Cases in which email does not flow directly from the author's administrative domain to the recipients are collectively referred to in this document as indirect email flows.  Due to existing and increasing adoption of DMARC, the impact of DMARC-based email rejection policies on both direct and indirect email flows can be significant. </t> 
			<t>Several known causes of interoperability issues are presented, followed by a description of components within the Internet Mail Architecture <xref target="RFC5598"/> where interoperability issues can arise.</t>
			<t>Lastly, known and possible methods for addressing interoperability issues are presented.  There are often multiple ways to address any given interoperability issue.  While this document strives to be comprehensive in its review, it should not be treated as complete.</t>
			<section title="Document Conventions"> 
        <t>Notation regarding structured fields is taken from <xref target="RFC5598"/>.</t>
				<t>Organizational Domain and Authenticated Identifiers are specified in <xref target="RFC7489">DMARC</xref>.</t>
			</section>
		</section>
		<section title="Causes of Interoperability Issues">
			<t>Interoperability issues between DMARC and indirect email flows arise when conformance to the DMARC specification leads an implementation to apply DMARC based policy to messages that are both compliant with the architecture as specified in <xref target="RFC5598"/> and viewed as legitimate by the intended recipient. To be clear, this document does not address emails considered legitimate by the intended recipient but which are not conformant to other email specifications. The rest of this section describes several conceptual causes of interoperability issues.</t> 
      <section title="Originator vs Receiver Perspective">
        <t>Some Receivers are concerned that wanted email messages are received, regardless if such email messages are not strictly in conformance to any standard or protocol.</t>
        <t>Some Originators, particularly for high value transactional messages, want the message discarded if it passes through an intermediary and is modified in any way resulting in a failure to validate. Examples of such messages include those related to financial organizations and medical establishments.</t>
      </section>
			<section title="Identifier Alignment"> 
				<t>DMARC relies on <xref target="RFC6376">DKIM</xref> and <xref target="RFC7208">SPF</xref> to perform message source validation.  The <xref target="RFC7489">DMARC</xref> mechanism refers to source domains that are validated by DKIM or SPF as Authenticated Identifiers.  DMARC requires an Authenticated Identifier to be relevant to the domain found in the message's RFC5322.From header field <xref target="RFC5322"/>. This relevancy  is referred to as Identifier Alignment.</t> 
				<t>Identifier Alignment can be strict, where the domains exactly match each others, or relaxed where the domains are part of the same Organizational Domain. There are, in general, the same interoperability issues between strict and relaxed alignment, however in strict mode the possible solutions are more constrained when possible. This Document mainly implies relaxed Identifier Alignment.</t>
				<t>DKIM provides a cryptographic means for a domain to be associated with a particular message. DKIM does not make any constraints on what domains may or must present this association. However, for a DKIM identifier to align in DMARC, the signing domain of a valid signature must be part of the same Organizational Domain as the domain in the RFC5322.From header field <xref target="RFC5322"/>. </t> 
				<t>In addition, DKIM allows for the possibility of multiple valid signatures.  The DMARC mechanism will process Authenticated Identifiers that are based on DKIM signatures until an aligned Authenticated Identifier is found (if any). However, operational experience has shown that some implementations have difficulty processing multiple signatures.  The impact on DMARC processing is clear: implementations that cannot process multiple DKIM signatures may erroneously apply DMARC based policy to otherwise legitimate messages. </t> 
				<t>SPF can provide two Authenticated Identifiers based on two different SPF identities: <xref target="RFC7208">RFC7208.HELO</xref> and <xref target="RFC7208">RFC7208.MAILFROM</xref>. DMARC uses only the RFC7208.MAILFROM identifier for alignment. The SPF validated domain in RFC7208.MAILFROM must be part of the same Organizational Domain as the domain in the RFC5322.From header field to be aligned. It is important to note that even when an SPF record exists for the domain in RFC5322.From, SPF will not authenticate it unless it is also the domain in RFC7208.MAILFROM, furthermore, RFC7208.MAILFROM definition is different from <xref target="RFC5321">RFC5321.MailFrom</xref> definition.</t> 
			</section> 
			<section title="Message Forwarding">
				<t>Message forwarding is a generic concept encapsulating a variety of behaviors.  <xref target="IMA_DMARC"/> describes forwarding behavior as it relates to the components of the Internet Mail Architecture.</t>
				<t>All of these behaviors involve email being retransmitted by a new SMTP server. As discussed above, for SPF to cause a DMARC pass, the domain of the RFC7208.MAILFROM, must be aligned with that of the RFC5322.From header field:
				<list style="symbols">
					<t>If the RFC5321.MailFrom is not empty and if the forwarder keeps the RFC5321.MailFrom, the SPF validation will fail altogether unless the forwarder is an authorized part of the originator's email sending infrastructure. On another hand, if the forwarder uses its own domain in the RFC5321.MailFrom, SPF passes but the alignment with the RFC5322.From header field fails.</t>
					<t>If the RFC5321.MailFrom is empty, the RFC5321.Helo of the forwarder will likely be in different organizational domain of the RFC5322.From. SPF may pass but the alignment with the RFC5322.From header field fails.</t>
				</list>
				In either case, SPF cannot produce a DMARC pass, and DKIM will be required to get DMARC to pass. </t>
			</section>
			<section title="Message Modification">
				<t>Modification of email content invalidates most DKIM signatures, and many message forwarding systems modify email content. Mailing list processors are the most common example of such systems, but other forwarding systems also make modifications. Although DKIM provides a length flag so that content can be appended (See Section 8.2 of <xref target="RFC6376"/> for additional security considerations), in practice, particularly with <xref target="RFC2045">MIME-encoded</xref> messages, a mailing list processor will do more than append (See Section 5.3 of <xref target="RFC5598"/> for details). Furthermore, the use of the length flag is seldom found in emails in part because of its security challenges.</t>
				<t>DKIM has two canonicalizations to use for headers and body separately: simple and relaxed. The latter allows some modest in transit modifications that do not change the interpretation of the content of the email. The relaxed canonicalization is more computing intensive and may not have been preferred in the early deployment of DKIM as this may have been more significant than today.</t>
			</section>
		</section>
		<section title="Internet Mail Architecture, DMARC, and Indirect Email Flows" anchor="IMA_DMARC">
			<t>This section describes components within the Internet Mail Architecture <xref target="RFC5598"/> where interoperability issues between DMARC and indirect email flows can be found.</t>
			<section title="Message Handling System">
				<t>Section 4 of <xref target="RFC5598"/> describes six basic components that make up the Message Handling System (MHS):
            	<list style="symbols">
            		<t>Message</t>
            		<t>Message User Agent (MUA)</t>
            		<t>Message Submission Agent (MSA)</t>
            		<t>Message Transfer Agent (MTA)</t>
            		<t>Message Delivery Agent (MDA)</t>
            		<t>Message Store (MS)</t>
            	</list>
           		Of these components MSA, MTA, and MDA are discussed in relation to interoperability with DMARC.</t>
				<t>A Mediator is a special class of MUA that is given special consideration in this section due to the unique issues Mediators face when attempting to interoperate with DMARC.</t>
				<section title="Message Submission Agents">
					<t>An MSA accepts messages submitted by a Message User Agent (MUA) and enforces the policies of the hosting ADministrative Management Domain (ADMD) and the requirements of Internet standards.</t>
					<t>MSAs are split into two sub-components:
              			<list style="symbols">
              				<t>Author-focused MSA functions (aMSA)</t>
              				<t>MHS-focused MSA functions (hMSA)</t>
              			</list>
              		</t>
					<t>MSA interoperability issues with DMARC begin when an aMSA accepts a message where the RFC5322.From header field contains a domain that is outside of the ADMD of the MSA.  The ADMD will almost certainly not be capable of sending email that yields Authenticated Identifiers aligned with the domain found in the RFC5322.From header field.  Examples of this issue include "forward-to-friend" functionality commonly found on news/article websites or "send-as" functionality present on some MUAs.</t>
					<t>When an hMSA takes responsibility for transit of a message containing a domain in the RFC5322.From header field that is outside of the hMSA's ADMD, the hMSA faces DMARC interoperability issues if the domain publishes a DMARC policy of "quarantine" or "reject".  These issues are marked by an inherent difficulty in establishing alignment with the domain present in a message's RFC5322.From header field.  Examples of this issue include:
               			<list style="symbols">
               				<t>Pseudo-open relays - a residential ISP that allows its customers to relay any domains through its infrastructure.</t>
               				<t>Embedded devices - cable/dsl modems, firewalls, wireless access points that send email using hardcoded domains.</t>
               				<t>Email service providers - ESPs that service customers that are using domains that publish a DMARC "reject" policy.</t>
               				<t>Calendaring software - an invited member of an event modifies the event causing calendaring software to emit an update that appears to come from the creator of the event.</t>
               			</list>
               		</t>
				</section>
				<section title="Message Transfer Agents" anchor="mta">
					<t>MTAs relay a message until the message reaches a destination MDA.</t>
					<section title="Message Encoding">
						<t>An MTA may modify the message encoding, for instance by converting 8-bit MIME sections to quoted-printable 7-bit sections. This modification is outside the scope of DKIM canonicalization and will invalidate DKIM signatures that include message content.</t>
					</section>
					<section title="Header Standardization">
						<t>An MTA may standardize headers, usually in order to make non-RFC compliant headers properly compliant. For instance, some common MTAs will correct comprehensible but non-compliant date formats to compliant ones. This correction is outside the scope of DKIM canonicalization and will invalidate DKIM signatures. This correction is also outside the scope of this document in providing solutions for non RFC compliant emails.</t>
					</section>
				</section>
				<section title="Message Delivery Agents">
					<t>The MDA transfers a message from the MHS to a mailbox.  Like the MSA, the MDA consists of two sub-components:
             			<list style="symbols">
             				<t>MHS-focused MDA functions (hMDA)</t>
             				<t>Recipient-focused MDA functions (rMDA)</t>
             			</list>
             		</t>
					<t>Both the hMDA and the rMDA can redirect a message to an alternative address.  DMARC interoperability issues related to redirecting of messages are described in <xref target="mediators"/>.</t>
					<t>SIEVE <xref target="RFC5228"/> functionality often lives in the rMDA sub-component and can cause DMARC interoperability issues. The SIEVE 'addheader' and 'deleteheader' filtering actions can modify messages and invalidate DKIM signatures, removing DKIM-supplied Authenticated Identifiers as inputs to the DMARC mechanism. There are also SIEVE extensions that modify the body. SIEVE may only become an issue when the email is reintroduced in the transport infrastructure.</t>
				</section>
			</section>
			<section title="Mediators" anchor="mediators">
				<t>See <xref target="RFC5598"/> for a complete definition of Mediators.</t>
				<t>Mediators forward messages through a re-posting process.  Mediators share some functionality with basic MTA relaying, but have greater flexibility in both addressing and content modifications.</t>
				<t>DMARC interoperability issues are prevalent within the context of Mediators, which are often used precisely for their ability to modify messages.</t>
				<section title="Alias">
					<t>An Alias is a simple re-addressing facility that provides one or more new Internet Mail addresses, rather than a single, internal one.  A message continues through the transfer service for delivery to one or more alternative addresses.</t>
					<t>Aliases can be implemented by mailbox-level forwarding (e.g. through "dot-forwarding") or SIEVE-level forwarding (through the SIEVE 'redirect' action) or other methods.  When an Alias preserves message content and does not make significant header changes, DKIM signatures may remain valid.  However, Aliases often extend the delivery path beyond SPF's ability to grant authorization.</t>
					<t>Examples of Aliasing include:
             			<list style="symbols">
             				<t>Forwarding email between freemail providers to try different interfaces while maintaining an original email address.</t>
             				<t>Consolidating many email addresses into a single acccount to centralize processing.</t>
             				<t>Services that provides "activity based", "role based" , "vanity" or "temporary" email addresses such as universities and professional associations. For instance professional or alumni institutions may offer to their members an alias for the duration of their membership but may not want to deal with the long term storage of emails.</t>
         				</list>
         			</t>
					<t>In most cases, the aMSA providing Alias services has no administrative relationship to the ADMD of the final recipient, so solutions to Alias-related DMARC failure should not assume such a relationship.</t>
				</section>
				<section title="ReSenders" anchor="resenders">
					<t>ReSenders "splice" a message's addressing information to connect the Author of the original message with the Recipient(s) of the new message.  The new Recipient sees the message as being from the original Author, even if the Mediator adds commentary.</t>
					<t>ReSenders introduce DMARC interoperability issues as content modification invalidates DKIM signatures.  SPF's ability to grant authorization via alignment is removed as the new Recipient receives the message from the Mediator.</t>
					<t>Without an ability to produce Authenticated Identifiers relevant to the Author's RFC5322.From header field domain using either DKIM or SPF, the new Recipient has almost no chance of successfully applying the DMARC mechanism.</t>
					<t>Examples of ReSenders include MUA-level forwarding by resending a message to a new recipient or by forwarding a message "inline" to a new recipient (this does not include forwarding a message "as an attachment").  An additional example comes in the form of calendaring software that allows a meeting attendee (not the meeting organizer) to modify the content of an invite causing the invitations to appear to be reissued from the meeting organizer.</t>
				</section>
				<section title="Mailing Lists">
					<t>A Mailing List receives messages as an explicit addressee and then re-posts them to a list of subscribed members.  The Mailing List performs a task that can be viewed as an elaboration of the ReSender.</t>
					<t>Mailing Lists share the same DMARC interoperability issues as <xref target="resenders">ReSenders</xref>, and very commonly modify headers or message content in ways that will cause DKIM to fail, including:
            			<list style="symbols">
            				<t>prepending the RFC5322.Subject header field with a tag, to allow the receiver to identify visually the mailing list.</t>
            				<t>adding a footer to the email body to contain administrative instructions.</t>
            				<t>removing some MIME-parts from the email or converting the message to text only.</t>
            				<t>PGP-encrypting or S/MIME encrypting the body to the receiver's key.</t>
            				<t>enforcing community standards by rewriting banned words.</t>
            				<t>allowing moderators to add arbitrary commentary to messages.</t>
            			</list>
            		Any such modifications would invalidate a DKIM signature.</t>
					<t>Mailing Lists may also have the following DMARC interoperability issues:
              			<list style="symbols">
              				<t>Subscribed members may not receive email from members that post using domains that publish a DMARC "p=reject" policy.</t>
              				<t>Mailing Lists may interpret DMARC-related email rejection as an inability to deliver email to the recipients that are checking and enforcing DMARC policy.  This processing may cause subscribed members to be suspended or removed from the Mailing List.</t> 
              			</list>
              		</t>
              		<t>These changes are common for many mailing lists and receivers are used to them. Furthermore MUA expects certain mailing list behavior in presenting emails to the end users</t>
				</section>
				<section title="Gateways">
					<t>A Gateway performs the basic routing and transfer work of message relaying, but it also is permitted to modify content, structure, address, or attributes as needed to send the message into a messaging environment that operates under different standards or potentially incompatible policies.</t>
					<t>Gateways share the same DMARC interoperability issues as <xref target="resenders">ReSenders</xref>.</t>
					<t>Gateways may share also the same DMARC interoperability issues as <xref target="mta">MTAs</xref>.</t>
					<t>Gateway-level forwarding can introduce DMARC interoperability issues if the Gateway is configured to rewrite the message to map between recipient domains.  For example, an acquisition may lead the acquiring company to decide to decommission the acquired company's domains by rewriting messages to use the domain of the acquiring company. Since the RFC5322.To header field is usually DKIM-signed, this kind of rewriting will also cause DKIM signatures to fail.</t>
				</section>
				<section title="Boundary Filters">
					<t>To enforce security boundaries, organizations can subject messages to analysis for conformance with their safety policies.  A filter might alter the content to render it safe, such as by removing content deemed unacceptable.</t>
					<t>Boundary Filters share the same DMARC interoperability issues as ReSenders.</t>
					<t>Issues may arise if SPF and DKIM is evaluated after the filter modifications.</t> 
					<t>Examples of Boundary Filters include:
                		<list style="symbols">
                			<t>Anti-spam: To keep its reputation, an MTA that transfers a message may remove harmful content from messages that are likely to be unwanted by the next MTA and/or add text in the body to indicate the message has been scanned. Any such modifications would invalidate a DKIM signature.</t>
                			<t>Any service that reformulates the RFC5322.body for any other reason, for instance adding an organizational disclaimer.</t>
                			<t>Secondary MX services.  In this case, however, it is inappropriate for a primary MX server to perform an SPF check against its own secondaries.  Rather, the secondary MX should perform this function.</t>
                		</list>
                	</t>
				</section>
			</section>
			<section title="Combinations">
				<t>The causes of indirect email flows can be combined.  For example, a university student may subscribe to a mailing list (using his university email address) while this university email address is configured to forward all emails to a freemail provider where a more permanent email address for this student exists. </t>
				<t>Within an organization the message may pass through various <xref target="mta">MTAs</xref>, each of which performs a different function (authentication, filtering, distribution, etc.) </t>
			</section>
		</section>
		<section title="Possible Mitigations of Interoperability Issues">
			<t>Solutions to interoperability issues between DMARC and indirect email flows vary widely in their scope and implications. They range from improvements to underlying processors, such as proper handling of multiple DKIM signatures, to more radical approaches to the messaging architecture.  This section describes possible ways to address interoperability issues.</t>
			<t>Mail systems are diverse and widely deployed and are expected to continue to work with old systems. For instance, Qmail is still used and the base code has not been updated since 1998. Ezmlm, a once popular mailing list manager, is still deployed and has not been updated since 1997, although a new version, Ezmlm-idx exists. In this constrained environment, some solutions may be time-consuming and/or disruptive to implement.</t>
			<t> DMARC provides for receivers to make decisions about identity alignment acceptability based on information outside DMARC and communicate those decisions as "overrides" to the sender. This facility can be used to ease some interoperability issues, although care is needed to ensure that this does not create loopholes that abusers can use arbitrarily.  </t>
			<section title="Mitigations in Current Use">
				<t> At many places where DMARC is already deployed, mitigations are in use. These mitigations vary in their effectiveness and side effects, but have the advantage that they are currently available.</t>
				<section title="Mitigations for Senders">
					<section title="Identifier Alignment">
						<t><list style="symbols">
							<t> MTAs handling multiple domains may choose to change RFC5321.MailFrom to align with RFC5322.From to improve SPF usability for DMARC.</t>
							<t> MTAs handling multiple domains may also choose to align RFC5321.HELO/EHLO to RFC5322.From, particularly when sending bounce messages. Adjusting dynamically the RFC5321.HELO based on the RFC5322.From may not be possible for some MTA software.</t>
							<t> MTAs may choose to DKIM sign bounces with an aligned domain to allow DKIM-based DMARC pass.</t>
							<t> MTAs handling multiple domains may require DMARC-using senders to provide DKIM keys and use DKIM to avoid SPF alignment issues. Handling DKIM keys with a third party has its security challenges.</t>
							<t>Senders who are sending on behalf of users in other Administrative Domains may choose to use an RFC5322.From under the sender's control. The new From can be either a forwarding address in a domain controlled by the Sender, or a placeholder address, with the original user's address in a RFC5322.Reply-to header field. However this may affect what the recipient expects in its MUA.</t>
              <t>Senders can use different domains with different DMARC policies for email sent directly and email known to use indirect mail flow. However for known brands, all active domains are likely to be targeted equally by abusers.</t>
						</list></t>
					</section>
					<section title="Message Modification">
						<t>
							<list style="symbols">
							<t> Senders can maximize survivability of DKIM signatures by limiting the header fields they sign, using relaxed canonicalization and by using length to allow appended signatures.</t>
							<t> Senders can also maximize survivability by starting with RFC-compliant headers and common body formats.</t>
							<t> In order to minimize the chances of transport conversions, Senders can convert the message to a suitable MIME content-transfer encoding such as quoted-printable or base64 before signing (<xref target="RFC6376"/> Section 5.3). </t>
							</list>
						</t> 
					</section>
				</section>
				<section title="Mitigations for Receivers">
					<section title="Identifier Alignment">
						<t><list style="symbols">
							<t>Receivers should update DKIM handling libraries to ensure that they process all valid DKIM signatures and check them for alignment.</t>
						</list></t>
					</section>
					<section title="Policy Override">
						<t><list style="symbols">
							<t>Receivers can amalgamate data from their user base to identify forwarders and use such list for a DMARC local policy override. This process may be easier for large receivers, where there is data and resources to create such lists, than for small receivers.</t>
						</list></t>
					</section>
				</section>
				<section title="Mitigations for ReSenders">
					<section title="Changes to the RFC5322.From">
						<t>Many ReSender issues can be avoided by using an RFC5322.From header field under the ReSender's control, instead of the initial RFC5322.From. This will correct identifier alignment issues and allow arbitrary message modification, for instance. When ReSenders change the RFC5322.From, it is desirable to preserve the information about the original initiator of the message.</t>
						<t>A first option is to use the <xref target="RFC5703">Original-From</xref> (or X-Original-From) header field for this purpose in various contexts (X- header fields name are discouraged by <xref target="RFC6648"/>). However, handling of Original-From (or X-Original-From) is not defined anywhere. It is not currently used consistently or displayed to the user, but in any situation where it is used, it is a new unauthenticated identifier available for exploitation.</t>
						<t>Another option for ReSenders is to rewrite the RFC5322.From header field address to a valid forwarding address to the original sender, in a domain that the ReSender controls.</t>
					</section>
					<section title="Avoiding Message Modification">
						<t><list style="symbols">
							<t> Forwarders can choose to add email header fields instead of modifying existing headers or bodies, for instance to indicate a message may be spam.</t>
							<t> Forwarders can minimize the circumstances in which they choose to fix messages, preferring to preserve non-compliant headers to creating DKIM failures.</t>
							<t> Forwarders can choose to reject messages with suspect or harmful content instead of modifying them.</t>
						</list></t>
						
					</section>
					<section title="Mailing Lists">
						<t><xref target="RFC6377"/> provides some guidance on using DKIM with Mailing lists. Here are some remediation techniques on using DMARC with Mailing lists: 
		          			<list style="symbols">
		          				<t>One mitigation policy, which is now present on several Mailing List software, is to configure the Mailing List Manager (MLM) to alter the RFC5322.From header field to use the domain of the MLM. Since most list subscribers prefer to know the identity of the author of the original message, typically this information may be provided in the display name part of the RFC5322.From header field. This display name needs to be carefully crafted as to not collide with the original display name of the author, nor contain something that looks like an email address or domain name. These modifications may to some extent defeat the purpose of DMARC itself. It may make it difficult to ensure that users of all email clients can easily reply to the author, the list, or all using the email client features provided for that purpose. Use of RFC5322.Reply-To header field can alleviate this problem depending on whether the mailing list is configured to reply-to-list, reply-to-author or reply-to-fixed-address, however it is important to note that this header field can take multiple email addresses. When altering the RFC5322.From there are two possibilities, to change it to put the mailing list email address, or to change it to add a suffix like ".invalid" to the domain of the email address present there. The later modification may create issues because it is an invalid domain name, and some MTAs may take particular attention to the validity of email addresses in RFC5322.From and the reputation of the domains present there.</t>
		          				<t>Another mitigation policy is to configure the MLM to "wrap" the message in a MIME message/rfc822 part and to send as the Mailing List email address. Many email clients (as of August 2014) have difficulty reading such messages. </t>
		          				<t>Another mitigation policy, is to configure the MLM to not modify the message so that the DKIM signature remains valid. Some Mailing Lists are mainly setup this way and require little modifications to ensure the DKIM signature is preserved. However moving to this policy a list that do extensive modification to the email, may be too much of a change for the members of such list.</t>
                      <t>Another mitigation policy, is to reject posts from domains with a DMARC policy other than p=none. However members of such  Mailing  Lists may complain of unfair exclusion.</t>
		          				<t>To alleviate unsubscribes to the Mailing List due to the messages bouncing because of DMARC, the MLM needs to not act on bounces due to Message Authentication issues. <xref target="RFC3463"/> specifies Enhanced Mail System Status Codes which help differentiate between various bounces. Correctly interpreting Extended SMTP error messages is useful in this case in particular codes defined in <xref target="RFC7372"/> and in DMARC.</t>
		          			</list>
		          		All these techniques may provide some specific challenges in MUAs and different operational usages for end users (like rewriting filters to sort emails in folders). There will be some time before all implications are understood and alleviated. </t>
					</section>
				</section>
			</section>
			<section title="Proposed and In-Progress Mitigations">
				<t>The following mitigations are based on Internet Drafts which have not yet received broad consensus. They are described here to offer exploratory path for solutions. These solutions should not be used in a production environment.
					<list style="symbols">
					<t>Third party authorization, <xref target="RFC6541"/>, <xref target="I-D.otis-tpa-label"/> and <xref target="I-D.kucherawy-dkim-delegate"/> provide ways to extend identifier alignment under the control of the domain owner.</t>
					<t>DKIM with constrained transformations, <xref target="I-D.kucherawy-dkim-list-canon"/> is proposed to allow message modification.</t>
					<t>DKIM with recorded transformations, <xref target="I-D.kucherawy-dkim-transform"/> is proposed to indicate what limited transformations were done to the message so that a receiver could reverse them and confirm the validity of the orignal DKIM signature.</t>
					<t><xref target="I-D.kucherawy-original-authres"/> is intended as a way to pass along Original Authentication Results to "downstream" receivers. It is not widely implemented and relies on a trust relationship between the forwarder and the other receivers.</t>
					<t><xref target="I-D.levine-dkim-conditional"/> could be used to have the sender add a limited DKIM signature, that signs only a very limited set of header fields and not the body of the message. This DKIM signature would come with the condition that a subsequent known domain fully DKIM sign the message. For instance a Mailing List could transform the message, add its DKIM signature and there would be a valid DKIM signature aligned with the RFC5322.From that would satisfy DMARC while limiting the possibilities of replay attack.</t>
					</list>
				</t>
				<section title="Getting More Radical: Requiring New Communication Paths Between MUAs">
					<t>In practice a number of operators are using strict alignment mode in DMARC in order to avoid receiving new and innovative forms of unwanted and unauthentic email through systems purporting to be mailing list handlers.  The receiving ADMD has no knowledge of which lists the user has subscribed to and which they have not.  One avenue of exploration would be for the user to authorize mailing lists as proxies for authentication, at which point the receiving ADMD would be vesting some trust in the mailing list service.  The creators of DKIM foresaw precisely this possibility at the time by not tightly binding any semantics to the RFC5322.From header field.  Some experimental work has taken place in this area, as mentioned above.  Additional work might examine a new communication path to the user to authorize some form of transitive trust.</t>
				</section>
			</section>
		</section>
		<!-- Possibly a 'Contributors' section ... -->
		<section anchor="IANA" title="IANA Considerations">
			<t>This document contains no actions for IANA.  [RFC Editor: Please delete this section prior to publication.]</t>
		</section>
		<section anchor="Security" title="Security Considerations">
			<t>This document is an analysis of DMARC's impact on indirect email flows.  It describes the possibility of accidental denial-of-service that can be created by rejections of messages by DMARC-aware Mail Receivers.  However, it introduces no new security issues to Internet messaging.</t>
		</section>
		<section title="Acknowledgments" anchor="ack">
			<t>Miles Fidelman, John Levine, David Crocker, Stephen J. Turnbull, Rolf E. Sonneveld, Tim Draegen and Franck Martin contributed to the IETF DMARC Working Group's wiki page listing all known interoperability issues with DMARC and indirect email flows.</t>
			<t>Tim Draegen created the first draft of this document from these contributions and by hamfistedly mapping contributions into the language of <xref target="RFC5598"/>.</t>
		</section>
	</middle>
	<!--  *****BACK MATTER ***** -->
	<back>
		<!-- References split into informative and normative -->
		<!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->
		<references title="Normative References"><!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

      &RFC2045;
      &RFC3463;
      &RFC5228;
      &RFC5321;   
      &RFC5322;
      &RFC5598;
      &RFC5703;
      &RFC6376;
      &RFC6377;
      &RFC6541;
      &RFC6648;
      &RFC7208;
      &RFC7372;
    </references>
		<references title="Informative References">
      &RFC7489;
      &I-D.kucherawy-dkim-transform;
      &I-D.levine-dkim-conditional;
      &I-D.otis-tpa-label;
      &I-D.kucherawy-dkim-list-canon;
      &I-D.kucherawy-dkim-delegate;
      &I-D.kucherawy-original-authres;
    </references>
	</back>
</rfc>
